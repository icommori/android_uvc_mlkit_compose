plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.innocomm.mlkit.camerauvctest'
    compileSdk 34

    defaultConfig {
        applicationId "com.innocomm.mlkit.camerauvctest"
        minSdk 21
        targetSdk 33
        versionCode 7
        versionName "1.0.0.6"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        ndk {
            abiFilters "armeabi-v7a",  "arm64-v8a"
        }

        packagingOptions {
            exclude "lib/arm64-v8a/librealm-jni.so"
        }
    }
    signingConfigs {

        create("releaseAndDefault") {
            storeFile = file("../androidDefault.jks")
            storePassword = "innocomm"
            keyAlias = "innocomm"
            keyPassword = "innocomm"
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.getByName("releaseAndDefault")
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.getByName("releaseAndDefault")
        }
        // add the code from below line
        applicationVariants.all {
                // this method is use to rename your all apk weather
                // it may be signed or unsigned(debug apk)
            variant ->
                variant.outputs.each {
                        // on below line we are setting
                        // a name to our apk as GFG.apk
                    output ->
                        def newName = output.outputFile.name
                        newName = newName.replace("app-", "UVC_MLKitTest_${variant.versionName}_")
                        output.outputFileName = newName
                }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
        doNotStrip "**/*/*.so"
    }
    aaptOptions {
        noCompress "tflite"
        // or noCompress "lite"
    }

}

dependencies {

    //ANDROIDUSBCAMERA - CAMERA ENGINE
    implementation 'com.github.jiangdongguo.AndroidUSBCamera:libausbc:3.2.8'

    //PERMISSIONS
    implementation 'com.google.accompanist:accompanist-permissions:0.35.1-alpha'


    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation "androidx.activity:activity-compose:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.1.0-rc01'
    implementation "androidx.compose.material:material-icons-extended:1.4.2"

    // CameraX
    implementation "androidx.camera:camera-camera2:1.3.0-alpha06"
    implementation "androidx.camera:camera-lifecycle:1.3.0-alpha06"
    implementation "androidx.camera:camera-view:1.3.0-alpha06"
    implementation 'androidx.camera:camera-video:1.3.0-alpha06'
    implementation 'androidx.camera:camera-core:1.3.0-alpha06'



    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // MLKit
    implementation 'com.google.mlkit:face-detection:16.1.6'
    implementation 'com.google.mlkit:image-labeling:17.0.8'
    implementation 'com.google.mlkit:object-detection:17.0.1'
    implementation 'com.google.mlkit:barcode-scanning:17.2.0'
    //implementation 'com.google.mlkit:text-recognition:16.0.0-beta6'
    implementation 'com.google.mlkit:text-recognition-chinese:16.0.0-beta6'
    implementation 'com.google.mlkit:face-mesh-detection:16.0.0-beta2'
    // If you want to use the base sdk
    implementation 'com.google.mlkit:pose-detection:18.0.0-beta4'
    // If you want to use the accurate sdk
    implementation 'com.google.mlkit:pose-detection-accurate:18.0.0-beta4'

    // Use this dependency to bundle the pipeline with your app
    implementation 'com.google.mlkit:image-labeling-custom:17.0.2'

    implementation 'com.google.mlkit:segmentation-selfie:16.0.0-beta5'




    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.12'
}